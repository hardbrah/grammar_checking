[
    {
        "messages": [
            {
                "role": "user",
                "content": "SpecInfer使用基于树的并行解码来计算其树注意力，为了能够在词元树上进行并行化验证，SpecInfer提出了一种树形注意力（Tree Attention）计算方法，通过构造的掩码矩阵和基于深度优先的KV-缓存更新机制，验证器可以在不增加额外存储的同时，尽可能并行化树中每一条路径的解码过程。相比于朴素的逐序列或逐词元的解码方法，该方法可以同时在内存开销和计算效率上达到性能最优。对于给定的推测词元树N，SpecInfer使用基于树的并行解码来计算其树形注意力，并生成一个输出张量O，该张量为N中的每个节点u都包含一个词元。SpecInfer的词元树验证器对照大语言模型检查推测词元的正确性，SpecInfer同时支持贪心解码和随机采样。"
            },
            {
                "role": "assistant",
                "content": "SpecInfer使用基于树的并行解码来计算~~其树~~##词元树的##注意力，为了能够在词元树上进行并行化验证，SpecInfer提出了一种树形注意力（Tree Attention）计算方法，通过构造的掩码矩阵和基于深度优先的KV-缓存更新机制，验证器可以在不增加额外存储的同时，尽可能并行化树中每一条路径的解码过程。相比于朴素的逐序列或逐词元~~的~~解码方法，该方法可以同时在内存开销和计算效率上达到性能最优。对于给定的推测词元树N，SpecInfer使用基于树的并行解码来计算~~其~~树形注意力，并生成一个输出张量O，~~该张量为~~##其中包含树中####每个节点u##N~~中~~的~~每个节点u~~都包含一个词元~~##对应的一个标记##。SpecInfer的词元树验证器对照大语言模型检查推测词元的正确性，SpecInfer同时支持贪心解码和~~随机采样~~##推测解码##。"
            }
        ],
        "source": "fdu annotation",
        "domain": "Todo",
        "input_token_len": 284,
        "language": "zh",
        "modified_times": 11
    },
    {
        "messages": [
            {
                "role": "user",
                "content": "一些大语言模型使用贪心解码生成词元，即在每个解码步骤中贪心选择可能性最高的词元。针对此类模型，SpecInfer从N的根节点开始，迭代对照大语言模型的原始输出检查节点的推测结果。对于N中的节点u，如果u包含一个子节点v（即pv=u），且其词元与大语言模型的输出匹配（即tv=O（u）），那么SpecInfer就成功推测出下一个词元。在这种情况下，SpecInfer完成对节点u的验证，并继续检查其子节点v。当节点u不包含与大语言模型输出匹配的子节点时，SpecInfer将O（u）作为已验证节点添加到N中，并终止验证过程。最后，将所有已验证节点追加到当前生成的词元序列V中。词元树验证使SpecInfer能够机会性地理解码多个词元，同时保持与增量解码相同的生成性能。"
            },
            {
                "role": "assistant",
                "content": "一些大语言模型使用贪心解码生成词元，即在每个解码步骤中贪心选择##输出##可能性最高的词元。针对此类模型，SpecInfer从N的根节点开始，迭代对照大语言模型的原始输出检查节点的推测结果。对于N中的节点u，如果u包含一个子节点v（~~即~~pv=u），且其词元与大语言模型的输出匹配（~~即~~tv=O（u）），那么SpecInfer就成功推测出下一个词元。在这种情况下，SpecInfer##即##完成##了##对节点u的验证，~~并~~##然后##继续检查其子节点v。当节点u不包含与大语言模型输出匹配的子节点时，SpecInfer将O（u）作为已验证节点添加到N中，并终止验证过程。最后，将所有已验证节点追加到当前生成的词元序列V中。词元树验证使SpecInfer能够##有##机会~~性地~~理解码多个词元，同时保持与增量解码相同的生成性能。"
            }
        ],
        "source": "fdu annotation",
        "domain": "Todo",
        "input_token_len": 289,
        "language": "zh",
        "modified_times": 9
    }
]